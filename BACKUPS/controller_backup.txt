package javathehut;

import HW5.Inventory;
import javafx.beans.property.SimpleBooleanProperty;
import javafx.beans.value.ObservableValue;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.geometry.Insets;
import javafx.scene.control.*;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.layout.StackPane;
import javafx.util.Callback;

import java.net.URL;
import java.util.ResourceBundle;

public class con_ss implements Initializable{

    @FXML private TableView tbl_catalog;
    @FXML private TableView tbl_cart;
    final Button addButton = new Button("Add");
    final StackPane paddedButton = new StackPane();




    @Override
    public void initialize(URL location, ResourceBundle resources)
    {
        ManageInventory currentInventory = new ManageInventory();
        //final TableView<InventoryItem> tbl_catalog = new TableView<>();


        TableColumn<InventoryItem, String> prodNameCol = new TableColumn<>("Product Name");
        prodNameCol.setCellValueFactory(new PropertyValueFactory("prodName"));
        TableColumn<InventoryItem, Double> prodPriceCol = new TableColumn<>("Price");
        prodPriceCol.setCellValueFactory(new PropertyValueFactory("prodPrice"));
        TableColumn catQtyCol = new TableColumn<>("Qty");
        catQtyCol.setCellValueFactory(new PropertyValueFactory<InventoryItem, TextField>("qty"));
        catQtyCol.setSortable(false);
        TableColumn<InventoryItem, Button> addBtnCol = new TableColumn<>("Add");
        addBtnCol.setCellValueFactory(new PropertyValueFactory("button"));
        addBtnCol.setSortable(false);
/**
        addBtnCol.setCellValueFactory(new Callback<TableColumn.CellDataFeatures<InventoryItem, Boolean>, ObservableValue<Boolean>>()
        {
            @Override public ObservableValue<Boolean> call(TableColumn.CellDataFeatures<InventoryItem, Boolean> features)
            {
                return new SimpleBooleanProperty(features.getValue() != null);
            }
        });
        addBtnCol.setCellFactory(new Callback<TableColumn<InventoryItem, Boolean>, TableCell<InventoryItem, Boolean>>()
        {
            @Override
            public TableCell<InventoryItem, Boolean> call(TableColumn<InventoryItem, Boolean> inventoryItemBooleanTableColumn)
            {
                return new AddItemCell(tbl_catalog);
            }
        });
 **/

        tbl_catalog.setItems(currentInventory.getInventory());
        tbl_catalog.getColumns().setAll(prodNameCol, prodPriceCol, catQtyCol, addBtnCol);

        //final TableView<InventoryItem> tbl_catalog = new TableView<>();


        TableColumn<InventoryItem, String> cartNameCol = new TableColumn<>("Product Name");
        cartNameCol.setCellValueFactory(new PropertyValueFactory("prodName"));
        TableColumn<InventoryItem, Double> cartPriceCol = new TableColumn<>("Price");
        cartPriceCol.setCellValueFactory(new PropertyValueFactory("prodPrice"));




        //tbl_cart.setItems(currentInventory.getInventory());
        tbl_cart.getColumns().setAll(cartNameCol, cartPriceCol);
    }
}
